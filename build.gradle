plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.sonarqube' version '5.0.0.4638'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'jacoco'
}

group = 'br.com.fiap.techchallenge'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

apply from: "$rootDir/gradle/integrationTest.gradle"

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.1.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation 'org.postgresql:postgresql'

    implementation 'com.google.guava:guava:31.1-jre'

}

test {
    useJUnitPlatform {
        excludeTags 'integrationTest'
    }

    testLogging {
        events "passed", "skipped", "failed"
    }

    finalizedBy jacocoTestReport
}

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')
    locations = ["filesystem:${project.projectDir}/src/main/resources/db"]
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonar {
    properties {
        property "sonar.projectKey", System.getenv("SONAR_PROJECT_KEY")
        property "sonar.organization", System.getenv("SONAR_ORG")
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.token", System.getenv("SONAR_TOKEN")

        property "sonar.pullrequest.key", System.getenv("PULL_REQUEST_KEY")
        property "sonar.pullrequest.branch", System.getenv("BRANCH_NAME")
        property "sonar.pullrequest.base", System.getenv("TARGET_BRANCH")

        property("sonar.sources", "src/main/java")
        property "sonar.tests", "src/test/java"
        property "sonar.projectVersion", "12"
    }
}
